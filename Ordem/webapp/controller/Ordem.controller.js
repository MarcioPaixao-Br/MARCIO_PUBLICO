sap.ui.define([
	"sap/ui/core/mvc/Controller",
	"sap/ui/model/Filter",
	"sap/ui/model/FilterOperator",
	"sap/ui/model/Sorter"
], function (Controller, Filter, FilterOperator, Sorter) {
	"use strict";
	return Controller.extend("br.com.ordem.Ordem.controller.Ordem", {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf br.com.ordem.Ordem.view.Ordem
		 */
		onInit: function () {},
		//F I  M
		onPush: function (event) {
			var selectedKey = this.byId("box0").getSelectedItem().getKey();
			var selectedtex = this.byId("box0").getSelectedItem().getText();
			var chave = selectedKey + " - " + selectedtex;
			var oView = this.getView();
			var oTable = oView.byId("table0");
			var oFilters = null;
			var filters = [];
			if (!(selectedKey == "*"))
				oFilters = [new sap.ui.model.Filter("CustomerID", "EQ", selectedKey)];
			filters.push(oFilters);
			var binding = oTable.getBinding("items");
			binding.filter(oFilters);
			this.byId("label0_1593741369278").setText(chave); //Gra√ßas a Deus deu certo esse codigo !!
		},
		//F I  M
		price: function (oContext) {
			var price = oContext.getProperty("Freight");
			var key = "";
			var text = "";
			if (price <= 20) {
				key = "<";
				text = "Menou ou igual a 20,00 BRL";
			} else if (price > 20 && price <= 50) {
				key = "";
				text = "Entre 20,00 BRL e 50,00 BRL";
			} else if (price > 50 && price <= 100) {
				key = "";
				text = "Entre 50,00 BRL e 100,00 BRL";
			} else if (price > 100 && price <= 150) {
				key = "";
				text = "Entre 100,00 BRL e 150,00 BRL";
			} else if (price > 150 && price <= 200) {
				key = "";
				text = "Entre 150,00 BRL e 200,00 BRL";
			} else {
				key = ">";
				text = "Maior que 200,00 BRL";
			}
			return {
				key: key,
				text: text
			};
		},
		//F I  M
		HandleGroup: function (evt) {
			var sorters = [];
			var item = evt.getParameter("selectedItem");
			var key = item ? item.getKey() : null;
			var grouper = this.getView().getController().price;
			if (key === "Freight") {
				sorters.push(new Sorter(key, true, grouper));
			} else {
				sorters.push(new Sorter("CustomerID", false, false));
			}
			var oTable = this.getView().byId("table0");
			var oBinding = oTable.getBinding("items");
			oBinding.sort(sorters);
		},
		//F I  M
		onFilter: function (oEvent) {
			//This code was generated by the layout editor.
			var query = oEvent.getSource().getValue();
			var oFilter = [];
			var oTable = this.getView().byId("table0");
			var binding = oTable.getBinding("items");
			// 
			oFilter.push(new Filter("ShipName", FilterOperator.Contains, query));
			// 
			binding.filter(oFilter);
		},
		// F I M
		onChange: function (oEvent) {
			var par = this.getView().byId("box0").getValue();
			if (par === "") {
				var query = "";
				var oFilter = [];
				var oTable = this.getView().byId("table0");
				var binding = oTable.getBinding("items");
				// 
				oFilter.push(new Filter("ShipName", FilterOperator.Contains, query));
				// 
				binding.filter(oFilter);

				var chave = null;
				this.byId("label0_1593741369278").setText(chave);
			}
		},
		orderPress: function (evt) {
			var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			var selectedIdProd = evt.getSource().getBindingContext().getProperty("OrderID");
			oRouter.navTo("Produtos", {
				idOrder: selectedIdProd
			});
		}		
	});
});